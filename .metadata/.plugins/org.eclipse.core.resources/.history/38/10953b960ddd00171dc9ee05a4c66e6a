/*
 * camera.cpp
 *
 *  Created on: 9 de dez de 2017
 *      Author: davi
 */

#include "camera.h"

Camera::Camera() {
	// TODO Auto-generated constructor stub
	goingLeft = false;
	goingRight = false;
	goingForward = false;
	goingBackward = false;

	position = Vec3::VEC3_ZERO;
	viewDirection = Vec3(0,0,-1);
}

Camera::~Camera() {
	// TODO Auto-generated destructor stub
}

const Vec3& Camera::getPosition() const {
	return position;
}

const Vec3& Camera::getObj() const {
	return viewDirection;
}

void Camera::setObj(const Vec3& obj) {
	this->viewDirection = obj;
}

void Camera::setPosition(const Vec3& position) {
	this->position = position;
}

void Camera::resetStates(){
	goingLeft = false;
	goingRight = false;
	goingForward = false;
	goingBackward = false;
}

void Camera::move(){
	if(goingLeft){
		position = position + (Vec3::VEC3_LEFT * 0.1);
	}
	if(goingRight){
		position = position + (Vec3::VEC3_RIGHT * 0.1);
	}
	if(goingForward){
		position = position + (Vec3::VEC3_FORWARD * 0.1);
	}
	if(goingBackward){
		position = position + (Vec3::VEC3_BACKWARD * 0.1);
	}
}
 void Camera::mouseMove(int x, int y){
	 Vec2 newMousePos = Vec2(x,y);


 }
